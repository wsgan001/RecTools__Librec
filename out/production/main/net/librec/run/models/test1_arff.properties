
# set data directory
dfs.data.dir=E:/Users/v-fuz/tools/recommender_system/librec_sourcecode/librec/data
# set result directory
# recommender result will output in this folder
dfs.result.dir=E:/Users/v-fuz/tools/recommender_system/librec_sourcecode/librec/core/src/main/java/net/librec/run/result

# convertor
# load data and splitting data 
# into two (or three) set
# setting dataset name

#data.input.path=filmtrust/rating
data.input.path=movielens/ml-100k-arff


# setting dataset format(UIR, UIRT)
# setting method of split data
# value can be ratio, loocv, given, KCV

#data.model.splitter=givenn
#data.splitter.givenn=user
#data.splitter.givenn.n=100

#data.model.splitter=testset
#data.testset.path=filmtrust/rating/test/ratings_3.txt

data.model.splitter=ratio
data.splitter.ratio=rating
data.splitter.trainset.ratio=0.8
#data.splitter.validset.ratio=0.1

#data.splitter.cv.number=5
# using rating to split dataset
#data.splitter.ratio=rating
# filmtrust dataset is saved by text
# text, arff is accepted

data.model.format=arff
#data.column.format=UIRT

# the ratio of trainset
# this value should in (0,1)
#data.splitter.trainset.ratio=1
#data.splitter.validset.ratio=0.1

# Detailed configuration of loocv, given, KCV 
# is written in User Guide 

# set the random seed for reproducing the results (split data, init parameters and other methods using random)
# default is set 1l
# if do not set ,just use System.currentTimeMillis() as the seed and could not reproduce the results.
rec.random.seed=1

# binarize threshold mainly used in ranking
# -1.0 - maxRate, binarize rate into -1.0 and 1.0
# binThold = -1.0ï¼Œ do nothing
# binThold = value, rating > value is changed to 1.0 other is 0.0, mainly used in ranking
# for PGM 0.0 maybe a better choose
data.convert.binarize.threshold=-1

rec.eval.enable=true

rec.recommender.class=pmf
rec.iterator.learnrate=0.01
rec.iterator.learnrate.maximum=0.01
rec.iterator.maximum=50
rec.user.regularization=0.01
rec.item.regularization=0.01
rec.factor.number=10
rec.learnrate.bolddriver=false
rec.learnrate.decay=1.0


